name: "Build and populate cache"
on:
    pull_request:
    push:
        branches:
            - main
    schedule:
        - cron: "30 7 * * *"
    workflow_dispatch:
permissions:
    contents: write
    issues: write
    pull-requests: write
jobs:
    tests:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Install nix
              uses: cachix/install-nix-action@v31
              with:
                  extra_nix_config: access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            - name: Update flake.lock
              uses: DeterminateSystems/update-flake-lock@main
              id: update-flake-lock
              with:
                  pr-title: "Update Nix flake inputs"
                  pr-labels: |
                      dependencies
                      automated
            - name: Show nixpkgs version
              run: nix-instantiate --eval -E '(builtins.getFlake (builtins.toString ./.)).inputs.nixpkgs.lib.version'
            - name: Setup cachix
              uses: cachix/cachix-action@v16
              with:
                  name: toyvo
                  authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
            - name: Check evaluation
              run: nix flake show --option allow-import-from-derivation true
            # TODO: ensure all systems can be built (dry run)
            # - name: Build nix packages
            #   run: nix run nixpkgs#nix-build-uncached -- ci.nix -A cacheOutputs
            - name: Merge flake.lock
              run: "gh pr merge --auto --merge ${{ steps.update-flake-lock.outputs.pull-request-number }}"
              env:
                  GH_TOKEN: ${{ github.token }}
