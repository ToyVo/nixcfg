name: "Build and populate cache"
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "30 7 * * *"
  workflow_dispatch:
permissions:
  contents: write
  issues: write
  pull-requests: write
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: DeterminateSystems/determinate-nix-action@main
      - name: Update flake.lock
        uses: DeterminateSystems/update-flake-lock@main
        id: update-flake-lock
        with:
          pr-title: "Update Nix flake inputs"
          pr-labels: |
            dependencies
            automated
      # - name: Build nix packages
      #   run: nix run nixpkgs#nix-fast-build -- --skip-cached --no-nom --flake ".#checks.$(nix eval --raw --impure --expr builtins.currentSystem)" --cachix-cache toyvo --option accept-flake-config true
      #   env:
      #     CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Merge flake.lock
        if: steps.update-flake-lock.outputs.pull-request-number != ''
        run: "gh pr merge --auto --squash ${{ steps.update-flake-lock.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ github.token }}
